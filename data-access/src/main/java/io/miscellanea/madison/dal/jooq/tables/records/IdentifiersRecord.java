/*
 * This file is generated by jOOQ.
 */
package io.miscellanea.madison.dal.jooq.tables.records;


import io.miscellanea.madison.dal.jooq.tables.Identifiers;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IdentifiersRecord extends UpdatableRecordImpl<IdentifiersRecord> implements Record4<Long, Long, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>catalog.identifiers.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>catalog.identifiers.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>catalog.identifiers.doc_id</code>.
     */
    public void setDocId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>catalog.identifiers.doc_id</code>.
     */
    public Long getDocId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>catalog.identifiers.isbn_10</code>.
     */
    public void setIsbn_10(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>catalog.identifiers.isbn_10</code>.
     */
    public String getIsbn_10() {
        return (String) get(2);
    }

    /**
     * Setter for <code>catalog.identifiers.isbn_13</code>.
     */
    public void setIsbn_13(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>catalog.identifiers.isbn_13</code>.
     */
    public String getIsbn_13() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Long, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Long, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Identifiers.IDENTIFIERS.ID;
    }

    @Override
    public Field<Long> field2() {
        return Identifiers.IDENTIFIERS.DOC_ID;
    }

    @Override
    public Field<String> field3() {
        return Identifiers.IDENTIFIERS.ISBN_10;
    }

    @Override
    public Field<String> field4() {
        return Identifiers.IDENTIFIERS.ISBN_13;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getDocId();
    }

    @Override
    public String component3() {
        return getIsbn_10();
    }

    @Override
    public String component4() {
        return getIsbn_13();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getDocId();
    }

    @Override
    public String value3() {
        return getIsbn_10();
    }

    @Override
    public String value4() {
        return getIsbn_13();
    }

    @Override
    public IdentifiersRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public IdentifiersRecord value2(Long value) {
        setDocId(value);
        return this;
    }

    @Override
    public IdentifiersRecord value3(String value) {
        setIsbn_10(value);
        return this;
    }

    @Override
    public IdentifiersRecord value4(String value) {
        setIsbn_13(value);
        return this;
    }

    @Override
    public IdentifiersRecord values(Long value1, Long value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached IdentifiersRecord
     */
    public IdentifiersRecord() {
        super(Identifiers.IDENTIFIERS);
    }

    /**
     * Create a detached, initialised IdentifiersRecord
     */
    public IdentifiersRecord(Long id, Long docId, String isbn_10, String isbn_13) {
        super(Identifiers.IDENTIFIERS);

        setId(id);
        setDocId(docId);
        setIsbn_10(isbn_10);
        setIsbn_13(isbn_13);
    }
}
