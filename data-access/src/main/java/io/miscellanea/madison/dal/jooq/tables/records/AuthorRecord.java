/*
 * This file is generated by jOOQ.
 */
package io.miscellanea.madison.dal.jooq.tables.records;


import io.miscellanea.madison.dal.jooq.tables.Author;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthorRecord extends UpdatableRecordImpl<AuthorRecord> implements Record7<Long, String, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>catalog.author.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>catalog.author.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>catalog.author.first_name</code>.
     */
    public void setFirstName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>catalog.author.first_name</code>.
     */
    public String getFirstName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>catalog.author.middle_name</code>.
     */
    public void setMiddleName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>catalog.author.middle_name</code>.
     */
    public String getMiddleName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>catalog.author.last_name</code>.
     */
    public void setLastName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>catalog.author.last_name</code>.
     */
    public String getLastName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>catalog.author.suffix</code>.
     */
    public void setSuffix(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>catalog.author.suffix</code>.
     */
    public String getSuffix() {
        return (String) get(4);
    }

    /**
     * Setter for <code>catalog.author.code</code>.
     */
    public void setCode(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>catalog.author.code</code>.
     */
    public String getCode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>catalog.author.full_name</code>.
     */
    public void setFullName(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>catalog.author.full_name</code>.
     */
    public String getFullName() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, String, String, String, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, String, String, String, String, String, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Author.AUTHOR.ID;
    }

    @Override
    public Field<String> field2() {
        return Author.AUTHOR.FIRST_NAME;
    }

    @Override
    public Field<String> field3() {
        return Author.AUTHOR.MIDDLE_NAME;
    }

    @Override
    public Field<String> field4() {
        return Author.AUTHOR.LAST_NAME;
    }

    @Override
    public Field<String> field5() {
        return Author.AUTHOR.SUFFIX;
    }

    @Override
    public Field<String> field6() {
        return Author.AUTHOR.CODE;
    }

    @Override
    public Field<String> field7() {
        return Author.AUTHOR.FULL_NAME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getFirstName();
    }

    @Override
    public String component3() {
        return getMiddleName();
    }

    @Override
    public String component4() {
        return getLastName();
    }

    @Override
    public String component5() {
        return getSuffix();
    }

    @Override
    public String component6() {
        return getCode();
    }

    @Override
    public String component7() {
        return getFullName();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getFirstName();
    }

    @Override
    public String value3() {
        return getMiddleName();
    }

    @Override
    public String value4() {
        return getLastName();
    }

    @Override
    public String value5() {
        return getSuffix();
    }

    @Override
    public String value6() {
        return getCode();
    }

    @Override
    public String value7() {
        return getFullName();
    }

    @Override
    public AuthorRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AuthorRecord value2(String value) {
        setFirstName(value);
        return this;
    }

    @Override
    public AuthorRecord value3(String value) {
        setMiddleName(value);
        return this;
    }

    @Override
    public AuthorRecord value4(String value) {
        setLastName(value);
        return this;
    }

    @Override
    public AuthorRecord value5(String value) {
        setSuffix(value);
        return this;
    }

    @Override
    public AuthorRecord value6(String value) {
        setCode(value);
        return this;
    }

    @Override
    public AuthorRecord value7(String value) {
        setFullName(value);
        return this;
    }

    @Override
    public AuthorRecord values(Long value1, String value2, String value3, String value4, String value5, String value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuthorRecord
     */
    public AuthorRecord() {
        super(Author.AUTHOR);
    }

    /**
     * Create a detached, initialised AuthorRecord
     */
    public AuthorRecord(Long id, String firstName, String middleName, String lastName, String suffix, String code, String fullName) {
        super(Author.AUTHOR);

        setId(id);
        setFirstName(firstName);
        setMiddleName(middleName);
        setLastName(lastName);
        setSuffix(suffix);
        setCode(code);
        setFullName(fullName);
    }
}
